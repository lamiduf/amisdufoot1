<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd"
	default-lazy-init="true">

	<!-- context:annotation-config / -->
	<context:component-scan base-package="gdes.lamiduf.domain" />
	<context:component-scan base-package="gdes.lamiduf.dao" />

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="transactionManager" />

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
		<property name="driverClass" value="${jdbc.dataSource.driver}" />
		<property name="jdbcUrl" value="${jdbc.dataSource.url}" />
		<property name="user" value="${jdbc.dataSource.username}" />
		<property name="password" value="${jdbc.dataSource.password}" />
		<property name="maxPoolSize" value="${jdbc.dataSource.maxPoolSize}" />
		<property name="minPoolSize" value="${jdbc.dataSource.minPoolSize}" />
		<property name="acquireIncrement" value="${jdbc.dataSource.acquireIncrement}" />
		<property name="maxIdleTime" value="${jdbc.dataSource.inactivityTimeout}" />
		<property name="maxStatements" value="${jdbc.dataSource.maxStatements}" />
	</bean>

	<!-- JPA config -->
	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan">
			<list>
				<value>gdes.lamiduf.domain</value>
			</list>
		</property>

		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="${jpa.generateDdl}" />
				<property name="showSql" value="${jpa.showSql}" />
			</bean>
		</property>
		<property name="jpaProperties">
			<props>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.dialect">${jpa.dialect}</prop>
				<prop key="hibernate.default_batch_fetch_size">8</prop>
				<prop key="hibernate.archive.autodetection">class</prop>
				<prop key="hibernate.generate_statistics">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<!-- <prop key="hibernate.cache.provider_class">net.sf.ehcache.hibernate.EhCacheProvider</prop> -->
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.SingletonEhCacheRegionFactory
				</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
			</props>
		</property>

	</bean>

	<!-- a PlatformTransactionManager is still required -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

</beans>